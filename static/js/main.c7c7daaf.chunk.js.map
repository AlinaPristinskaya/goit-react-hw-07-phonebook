{"version":3,"sources":["components/Form/Form.module.css","components/PersonEditor/PersoneEditor.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selektors.js","redux/contacts/actions.js","redux/contacts/contacts-operations.js","components/Form/Form.js","components/PersonEditor/PersonEditor.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReduser.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","contactsSelector","getItems","items","getVisibleContacts","allContacts","entities","getContacts","normalizedFilter","toLowerCase","entitie","name","includes","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","changeFilterContacts","fetchContactsRequest","fetchContactsSuccess","actions","fetchContactsError","operations","fetchContacts","dispatch","a","axios","get","data","addContact","number","contact","id","uuidv4","post","then","catch","error","deleteContact","contactId","delete","connect","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","reset","className","s","form","e","preventDefault","htmlFor","input","onChange","event","value","currentTarget","type","pattern","title","required","console","log","button","persons","onDeleteContacts","useDispatch","useEffect","length","stats","map","person","item","onClick","target","label","formSubmitHandler","addContacts","deleteContacts","path","createReducer","_","payload","find","user","alert","isLoading","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7c7daaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3Opkj\",\"input\":\"Form_input__3R10_\",\"button\":\"Form_button__1n2_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"PersoneEditor_stats__q4pP7\",\"item\":\"PersoneEditor_item__1RBO7\",\"button\":\"PersoneEditor_button__2lSCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__gdp9u\"};","//import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst getItems=state=>state.contacts.items;\r\nconst getFilter=state=>state.contacts.filter;\r\nconst getContacts=state=>state.contacts.items.entities\r\n\r\nconst getVisibleContacts=state=>{\r\n    const filter=getFilter(state);\r\n    const allContacts=getContacts(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter))\r\n  }\r\n\r\n/* const getVisibleContacts=createSelector([getFilter,getContacts],(filter,allContacts)=>{\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter)) \r\n}) */  \r\n\r\nconst contactsSelector={getItems,getFilter,getVisibleContacts};\r\nexport default contactsSelector","\r\n\r\nimport { createAction} from '@reduxjs/toolkit'\r\n\r\nexport const addContactRequest = createAction('todos/addContactRequest');\r\nexport  const addContactSuccess=createAction('contacts/addContactSuccess')\r\nexport const addContactError = createAction('todos/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('todos/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('todos/deleteContactSuccess');\r\nexport const deleteContactError = createAction('todos/deleteContactError');\r\n\r\n const filterContacts=createAction('contacts/filter')\r\n/* const filterContacts=value=>({\r\n    type:types.FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const changeFilterContacts=createAction('contacts/changeFilter')\r\n/* const changeFilterContacts=value=>({\r\n    type:types.CHANGE_FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const fetchContactsRequest=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsSuccess=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsError=createAction('contacts/fetchContactsRequest')\r\n\r\n const actions={fetchContactsError,\r\n    fetchContactsSuccess,\r\n    fetchContactsRequest,\r\n    changeFilterContacts,\r\n    filterContacts,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n\r\n}\r\nexport default actions;","\r\n\r\n\r\n//import {createAsyncThunk} from '@reduxjs/toolkit'\r\nimport a from '../contacts/actions'\r\nimport axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(a.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('http://localhost:3001/contacts');\r\n\r\n    dispatch(a.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(a.fetchContactsError(error));\r\n  } }\r\n\r\n  const addContact = ({name,number}) => dispatch => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name:name,\r\n      number:number,\r\n    };\r\n  \r\n    dispatch(a.addContactRequest());\r\n  \r\n    axios\r\n      .post('http://localhost:3001/contacts', contact)\r\n      .then(({ data }) => dispatch(a.addContactSuccess(data)))\r\n      .catch(error => dispatch(a.addContactError(error)));\r\n  };\r\n  \r\n  const deleteContact = contactId => dispatch => {\r\n    dispatch(a.deleteContactRequest());\r\n  \r\n    axios\r\n      .delete(`http://localhost:3001/contacts/${contactId}`)\r\n      .then(() => dispatch(a.deleteContactSuccess(contactId)))\r\n      .catch(error => dispatch(a.deleteContactError(error)));\r\n  };\r\n\r\nconst operations={fetchContacts,addContact,deleteContact}\r\n\r\nexport default operations;","import {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\nimport {connect} from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\n\r\n\r\n\r\nfunction Form({onSubmit}){\r\n  const [name,setName]=useState('');\r\n  const [number,setNumber]=useState('');\r\n\r\n  const nameInputId=uuidv4();\r\n  const numberInputId=uuidv4();\r\n\r\n  const handelChangeName=(event)=>{\r\n    const {value}=event.currentTarget;  \r\n    setName(value);\r\n  \r\n  }\r\n\r\n  const handelChangeNumber=(e)=>{\r\n    console.log(e);\r\n    const {value}=e.currentTarget;  \r\n    setNumber(value);\r\n\r\n  }\r\n\r\n    const handelSubmit=e=>{\r\n    e.preventDefault();\r\n    onSubmit({name,number});\r\n    reset()\r\n  }\r\n\r\n  const reset=()=>{\r\n      setName('');\r\n      setNumber('');\r\n  }\r\n \r\n  \r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handelSubmit}>\r\n        <label htmlFor={nameInputId}> Name </label>\r\n        <input className={s.input}\r\n              id={nameInputId}\r\n              onChange={handelChangeName}\r\n              value={name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n        />\r\n       <label htmlFor={numberInputId}> Number </label>\r\n       <input className={s.input}\r\n              id={numberInputId}\r\n              onChange={handelChangeNumber}\r\n              value={number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n       />\r\n       <button className={s.button}type=\"submit\">Add contact</button>\r\n    </form>\r\n\r\n</>\r\n);}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n  onSubmit:data=>dispatch(operations.addContact(data))\r\n})\r\n\r\n  export default connect(null,mapDispatchToProps)(Form);","\r\nimport s from './PersoneEditor.module.css';\r\nimport {connect, useDispatch} from 'react-redux';\r\n//import actions from '../../redux/contacts/actions';\r\nimport { useEffect } from 'react';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport contactsSelector from '../../redux/contacts/contacts-selektors';\r\n\r\n\r\n\r\nfunction PersonEditor({persons,onDeleteContacts}){\r\n  const dispatch=useDispatch();\r\n  \r\n  \r\n  useEffect(()=>{\r\n    dispatch(operations.fetchContacts())\r\n  },[dispatch]) \r\n\r\n   \r\n    return  (  <>\r\n      \r\n      <div>{persons.length? \r\n              <ul className={s.stats}>{persons.map((person)=>\r\n                <li className={s.item} key={person.id}>{person.name}:{person.number}\r\n                <button className={s.button}\r\n                    type=\"button\"\r\n                    onClick={() => onDeleteContacts(person.id)}>Удалить\r\n                </button>\r\n                </li>)}\r\n              </ul> : <p>No entries in the phone book</p>}\r\n            </div>  \r\n   </> )\r\n}\r\n\r\n\r\n\r\n const mapStateToProps=state=>({\r\n persons:contactsSelector.getVisibleContacts(state),\r\n})\r\n\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    onDeleteContacts:(id)=>dispatch(operations.deleteContact(id))\r\n  }\r\n}\r\n      \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PersonEditor);\r\n","import React from 'react';\r\nimport s from './Filter.module.css'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/contacts/actions'\r\nimport contactsSelector from '../../redux/contacts/contacts-selektors';\r\n\r\n\r\n\r\nconst Filter =({value,onChange})=>(\r\n  <label className={s.label}><b>Фильтр по имени</b><input className={\r\n    s.input\r\n  } type=\"Text\" value={value} onChange={onChange}/></label>\r\n\r\n);\r\nconst mapStateToProps=state=>({\r\n  value:contactsSelector.getFilter(state)\r\n}) \r\nconst mapDispatchToProps=dispatch=>({\r\n  onChange:e=>dispatch(actions.changeFilterContacts(e.target.value))\r\n})       \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","\r\nimport contactsSelector from './redux/contacts/contacts-selektors'\r\nimport Form from \"./components/Form/Form\"\r\nimport PersonEditor from './components/PersonEditor/PersonEditor';\r\nimport Filter from './components/Filter/Filter';\r\nimport {connect} from 'react-redux'\r\nimport actions from './redux/contacts/actions';\r\nimport { Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App({formSubmitHandler,getVisibleContacts,deleteContacts}){\r\n  \r\n  return(\r\n    <><Switch>\r\n      <Route path=\"/goit-react-hw-07-phonebook\">\r\n      <h1>Phonebook</h1>\r\n      <Form/> \r\n      <Filter/>\r\n      <h2>Contacts</h2>\r\n      <PersonEditor /> \r\n      </Route>\r\n      </Switch> \r\n    </>\r\n    \r\n)\r\n}\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    items:contactsSelector.getItems(state),\r\n    filter:contactsSelector.getFilter(state)\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    formSubmitHandler:value=> dispatch(actions.addContacts(value)),\r\n    getVisibleContacts:value=>dispatch(actions.filterContacts(value)),\r\n    deleteContacts:id=>dispatch(actions.deleteContacts(id)),\r\n    \r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport a from './actions';\r\n//import {fetchContacts} from './contacts-operations'\r\n\r\nconst entities=createReducer([], \r\n  {\r\n    [a.fetchContactsSuccess]:(_,{payload})=>payload,\r\n    [a.addContactSuccess]:(state,{payload})=>{\r\n      const user = state.find(user => user.name === payload.name); \r\n    if (user){return alert(`${payload.name} is already on contacts`)}return [...state,payload]},\r\n    [a.deleteContactSuccess]:(state,{payload})=>state.filter(({ id }) => id !== payload)\r\n\r\n  })\r\nconst isLoading=createReducer(false,{\r\n  [a.fetchContactsRequest]: () => true,\r\n  [a.fetchContactsSuccess]: () => false,\r\n  [a.fetchContactsError]: () => false,\r\n  [a.addContactRequest]: () => true,\r\n  [a.addContactSuccess]: () => false,\r\n  [a.addContactError]: () => false,\r\n  [a.deleteContactRequest]: () => true,\r\n  [a.deleteContactSuccess]: () => false,\r\n  [a.deleteContactError]: () => false,\r\n\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [a.fetchContactsRequest]: () => null,\r\n  [a.fetchContactsError]: () => null,\r\n});\r\n\r\nconst filterReducer=createReducer('', {\r\n  [a.changeFilterContacts]:(_,{payload})=>payload,\r\n})\r\n/* const filterReducer= (state = '', { type, payload }) => {\r\n    switch (type) {\r\n      case types.CHANGE_FILTER:\r\n        return payload;\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }; */\r\n\r\nexport default combineReducers({\r\n    items:combineReducers({\r\n      entities,\r\n      isLoading,\r\n      error\r\n    }),\r\n    filter:filterReducer,\r\n});","import { configureStore} from '@reduxjs/toolkit'\r\nimport contactsReducer from './contacts/contactsReduser';\r\n\r\n\r\n\r\n\r\n/* const rootReducer=combineReducers({\r\n    contacts:contactsReducer\r\n}) */  \r\nconst store=configureStore({\r\n    reducer:{\r\n        contacts:contactsReducer,\r\n    }\r\n})\r\n//const store=createStore(rootReducer,composeWithDevTools());\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nconsole.log(store);\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}