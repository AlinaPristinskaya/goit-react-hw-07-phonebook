{"version":3,"sources":["components/Form/Form.module.css","components/PersonEditor/PersoneEditor.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selektors.js","redux/contacts/actions.js","components/Form/Form.js","components/PersonEditor/PersonEditor.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReduser.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","contactsSelector","getItems","items","getVisibleContacts","createSelector","entities","allContacts","normalizedFilter","toLowerCase","entitie","name","includes","addContacts","createAction","data","payload","id","uuidv4","number","deleteContacts","filterContacts","changeFilterContacts","fetchContactsRequest","fetchContactsSuccess","actions","fetchContactsError","connect","dispatch","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","reset","className","s","form","e","preventDefault","htmlFor","input","onChange","event","value","currentTarget","type","pattern","title","required","console","log","button","persons","onDeleteContacts","useDispatch","useEffect","a","axios","get","length","stats","map","person","item","onClick","target","label","formSubmitHandler","path","createReducer","_","find","user","alert","isLoading","error","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddbdab1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3Opkj\",\"input\":\"Form_input__3R10_\",\"button\":\"Form_button__1n2_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"PersoneEditor_stats__q4pP7\",\"item\":\"PersoneEditor_item__1RBO7\",\"button\":\"PersoneEditor_button__2lSCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__gdp9u\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst getItems=state=>state.contacts.items;\r\nconst getFilter=state=>state.contacts.filter;\r\nconst getContacts=state=>state.contacts.items.entities\r\n\r\n/* const getVisibleContacts=state=>{\r\n    const filter=getFilter(state);\r\n    const allContacts=getContacts(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter))\r\n  } */\r\n\r\nconst getVisibleContacts=createSelector([getFilter,getContacts],(filter,allContacts)=>{\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter)) \r\n})  \r\n\r\nconst contactsSelector={getItems,getFilter,getVisibleContacts};\r\nexport default contactsSelector","\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction} from '@reduxjs/toolkit'\r\n\r\n  const addContacts=createAction('contacts/add',data=>{\r\n       return{ payload:{\r\n           id:uuidv4(),\r\n           name:data.name,\r\n           number:data.number}} \r\n})\r\n/* const addContacts=value=>({\r\n    type:types.ADD,\r\n    payload: {\r\n        id:uuidv4(),\r\n        name:value.name,\r\n        number:value.number\r\n      }\r\n}); */\r\n const deleteContacts=createAction('contacts/deleted');\r\n/* const deleteContacts=id=>({\r\n    type:types.DELETE,\r\n    payload: id\r\n\r\n}); */\r\n const filterContacts=createAction('contacts/filter')\r\n/* const filterContacts=value=>({\r\n    type:types.FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const changeFilterContacts=createAction('contacts/changeFilter')\r\n/* const changeFilterContacts=value=>({\r\n    type:types.CHANGE_FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const fetchContactsRequest=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsSuccess=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsError=createAction('contacts/fetchContactsRequest')\r\n\r\n const actions={fetchContactsError,\r\n    fetchContactsSuccess,\r\n    fetchContactsRequest,\r\n    changeFilterContacts,\r\n    filterContacts,\r\n    deleteContacts,\r\n    addContacts\r\n\r\n}\r\nexport default actions;","import {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../redux/contacts/actions';\r\n\r\n\r\n\r\nfunction Form({onSubmit}){\r\n  const [name,setName]=useState('');\r\n  const [number,setNumber]=useState('');\r\n\r\n  const nameInputId=uuidv4();\r\n  const numberInputId=uuidv4();\r\n\r\n  const handelChangeName=(event)=>{\r\n    const {value}=event.currentTarget;  \r\n    setName(value);\r\n  \r\n  }\r\n\r\n  const handelChangeNumber=(e)=>{\r\n    console.log(e);\r\n    const {value}=e.currentTarget;  \r\n    setNumber(value);\r\n\r\n  }\r\n\r\n    const handelSubmit=e=>{\r\n    e.preventDefault();\r\n    onSubmit({name,number});\r\n    reset()\r\n  }\r\n\r\n  const reset=()=>{\r\n      setName('');\r\n      setNumber('');\r\n  }\r\n \r\n  \r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handelSubmit}>\r\n        <label htmlFor={nameInputId}> Name </label>\r\n        <input className={s.input}\r\n              id={nameInputId}\r\n              onChange={handelChangeName}\r\n              value={name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n        />\r\n       <label htmlFor={numberInputId}> Number </label>\r\n       <input className={s.input}\r\n              id={numberInputId}\r\n              onChange={handelChangeNumber}\r\n              value={number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n       />\r\n       <button className={s.button}type=\"submit\">Add contact</button>\r\n    </form>\r\n\r\n</>\r\n);}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n  onSubmit:data=>dispatch(actions.addContacts(data))\r\n})\r\n\r\n  export default connect(null,mapDispatchToProps)(Form);","\r\nimport s from './PersoneEditor.module.css';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport actions from '../../redux/contacts/actions';\r\nimport { useEffect } from 'react';\r\nimport {fetchContacts} from '../../redux/contacts/contacts-operations';\r\nimport contactsSelector from '../../redux/contacts/contacts-selektors';\r\n\r\n\r\n\r\nfunction PersonEditor({persons,onDeleteContacts}){\r\n  const dispatch=useDispatch();\r\n  \r\n  \r\n  useEffect(()=>{\r\n    dispatch(fetchContacts())\r\n  },[dispatch]) \r\n\r\n   \r\n    return  (  <>\r\n      \r\n      <div>{persons.length? \r\n              <ul className={s.stats}>{persons.map((person)=>\r\n                <li className={s.item} key={person.id}>{person.name}:{person.number}\r\n                <button className={s.button}\r\n                    type=\"button\"\r\n                    onClick={() => onDeleteContacts(person.id)}>Удалить\r\n                </button>\r\n                </li>)}\r\n              </ul> : <p>No entries in the phone book</p>}\r\n            </div>  \r\n   </> )\r\n}\r\n\r\n\r\n\r\n const mapStateToProps=state=>({\r\n persons:contactsSelector.getVisibleContacts(state),\r\n})\r\n\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    onDeleteContacts:(id)=>dispatch(actions.deleteContacts(id))\r\n  }\r\n}\r\n      \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PersonEditor);\r\n","\r\n\r\n\r\n//import {createAsyncThunk} from '@reduxjs/toolkit'\r\nimport a from '../contacts/actions'\r\nimport axios from 'axios'\r\n\r\n/*  const fetchContacts = createAsyncThunk(\r\n  '/contacts/fetchContacts',\r\n  async ()=>{\r\n    const response= await fetchContacts();\r\n    return response\r\n  }\r\n    \r\n) */\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(a.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('http://localhost:3000/contacts');\r\n\r\n    dispatch(a.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(a.fetchContactsError(error));\r\n  } }\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Filter.module.css'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/contacts/actions'\r\nimport contactsSelector from '../../redux/contacts/contacts-selektors';\r\n\r\n\r\n\r\nconst Filter =({value,onChange})=>(\r\n  <label className={s.label}><b>Фильтр по имени</b><input className={\r\n    s.input\r\n  } type=\"Text\" value={value} onChange={onChange}/></label>\r\n\r\n);\r\nconst mapStateToProps=state=>({\r\n  value:contactsSelector.getFilter(state)\r\n}) \r\nconst mapDispatchToProps=dispatch=>({\r\n  onChange:e=>dispatch(actions.changeFilterContacts(e.target.value))\r\n})       \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","\r\nimport contactsSelector from './redux/contacts/contacts-selektors'\r\nimport Form from \"./components/Form/Form\"\r\nimport PersonEditor from './components/PersonEditor/PersonEditor';\r\nimport Filter from './components/Filter/Filter';\r\nimport {connect} from 'react-redux'\r\nimport actions from './redux/contacts/actions';\r\nimport { Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App({formSubmitHandler,getVisibleContacts,deleteContacts}){\r\n  \r\n  return(\r\n    <><Switch>\r\n      <Route path=\"/goit-react-hw-07-phonebook\">\r\n      <h1>Phonebook</h1>\r\n      <Form/> \r\n      <Filter/>\r\n      <h2>Contacts</h2>\r\n      <PersonEditor /> \r\n      </Route>\r\n      </Switch> \r\n    </>\r\n    \r\n)\r\n}\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    items:contactsSelector.getItems(state),\r\n    filter:contactsSelector.getFilter(state)\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    formSubmitHandler:value=> dispatch(actions.addContacts(value)),\r\n    getVisibleContacts:value=>dispatch(actions.filterContacts(value)),\r\n    deleteContacts:id=>dispatch(actions.deleteContacts(id)),\r\n    \r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport a from './actions';\r\n//import {fetchContacts} from './contacts-operations'\r\n\r\nconst entities=createReducer([], \r\n  {\r\n    [a.fetchContactsSuccess]:(_,{payload})=>payload,\r\n    [a.addContacts]:(state,{payload})=>{\r\n      const user = state.find(user => user.name === payload.name); \r\n    if (user){return alert(`${payload.name} is already on contacts`)}return [...state,payload]},\r\n    [a.deleteContacts]:(state,{payload})=>state.filter(({ id }) => id !== payload)\r\n\r\n  })\r\nconst isLoading=createReducer(false,{\r\n  [a.fetchContactsRequest]: () => true,\r\n  [a.fetchContactsSuccess]: () => false,\r\n  [a.fetchContactsError]: () => false,\r\n\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [a.fetchContactsRequest]: () => null,\r\n  [a.fetchContactsError]: () => null,\r\n});\r\n\r\nconst filterReducer=createReducer('', {\r\n  [a.changeFilterContacts]:(_,{payload})=>payload,\r\n})\r\n/* const filterReducer= (state = '', { type, payload }) => {\r\n    switch (type) {\r\n      case types.CHANGE_FILTER:\r\n        return payload;\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }; */\r\n\r\nexport default combineReducers({\r\n    items:combineReducers({\r\n      entities,\r\n      isLoading,\r\n      error\r\n    }),\r\n    filter:filterReducer,\r\n});","import { configureStore} from '@reduxjs/toolkit'\r\nimport contactsReducer from './contacts/contactsReduser';\r\n\r\n\r\n\r\n\r\n/* const rootReducer=combineReducers({\r\n    contacts:contactsReducer\r\n}) */  \r\nconst store=configureStore({\r\n    reducer:{\r\n        contacts:contactsReducer,\r\n    }\r\n})\r\n//const store=createStore(rootReducer,composeWithDevTools());\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nconsole.log(store);\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}