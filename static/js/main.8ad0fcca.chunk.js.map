{"version":3,"sources":["components/Form/Form.module.css","components/PersonEditor/PersoneEditor.module.css","components/Filter/Filter.module.css","redux/contacts/actions.js","redux/contacts/contacts-operations.js","components/Test/Test.js","components/Form/Form.js","components/PersonEditor/PersonEditor.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReduser.js","redux/store.js","index.js"],"names":["module","exports","addContacts","createAction","data","payload","id","uuidv4","name","number","deleteContacts","filterContacts","changeFilterContacts","fetchContactsRequest","fetchContactsSuccess","actions","fetchContactsError","fetchContacts","dispatch","a","axios","get","connect","state","isLoading","contacts","items","persons","entities","onDeleteContacts","useDispatch","useEffect","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","reset","className","s","form","e","preventDefault","htmlFor","input","onChange","event","value","currentTarget","type","pattern","title","required","console","log","button","getVisibleContacts","filter","normalizedFilter","toLowerCase","entitie","includes","useSelector","length","stats","map","person","item","onClick","target","label","formSubmitHandler","path","createReducer","_","find","user","alert","error","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ad0fcca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3Opkj\",\"input\":\"Form_input__3R10_\",\"button\":\"Form_button__1n2_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"PersoneEditor_stats__q4pP7\",\"item\":\"PersoneEditor_item__1RBO7\",\"button\":\"PersoneEditor_button__2lSCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__gdp9u\"};","\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction} from '@reduxjs/toolkit'\r\n\r\n  const addContacts=createAction('contacts/add',data=>{\r\n       return{ payload:{\r\n           id:uuidv4(),\r\n           name:data.name,\r\n           number:data.number}} \r\n})\r\n/* const addContacts=value=>({\r\n    type:types.ADD,\r\n    payload: {\r\n        id:uuidv4(),\r\n        name:value.name,\r\n        number:value.number\r\n      }\r\n}); */\r\n const deleteContacts=createAction('contacts/deleted');\r\n/* const deleteContacts=id=>({\r\n    type:types.DELETE,\r\n    payload: id\r\n\r\n}); */\r\n const filterContacts=createAction('contacts/filter')\r\n/* const filterContacts=value=>({\r\n    type:types.FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const changeFilterContacts=createAction('contacts/changeFilter')\r\n/* const changeFilterContacts=value=>({\r\n    type:types.CHANGE_FILTER,\r\n    payload: value\r\n\r\n}); */\r\n const fetchContactsRequest=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsSuccess=createAction('contacts/fetchContactsRequest')\r\n const fetchContactsError=createAction('contacts/fetchContactsRequest')\r\n\r\n const actions={fetchContactsError,\r\n    fetchContactsSuccess,\r\n    fetchContactsRequest,\r\n    changeFilterContacts,\r\n    filterContacts,\r\n    deleteContacts,\r\n    addContacts\r\n\r\n}\r\nexport default actions;","\r\n\r\n\r\n//import {createAsyncThunk} from '@reduxjs/toolkit'\r\nimport a from '../contacts/actions'\r\nimport axios from 'axios'\r\n\r\n/*  const fetchContacts = createAsyncThunk(\r\n  '/contacts/fetchContacts',\r\n  async ()=>{\r\n    const response= await fetchContacts();\r\n    return response\r\n  }\r\n    \r\n) */\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(a.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('http://localhost:3000/contacts');\r\n\r\n    dispatch(a.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(a.fetchContactsError(error));\r\n  } }\r\n\r\n\r\n\r\n\r\n\r\n","import {fetchContacts} from '../../redux/contacts/contacts-operations';\r\n\r\nimport actions from '../../redux/contacts/actions'\r\nimport {connect, useDispatch} from 'react-redux'\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nconst Test=({persons,onDeleteContacts})=>{\r\n  \r\n  const dispatch=useDispatch();\r\n  useEffect(()=>{\r\n    dispatch(fetchContacts())\r\n  })\r\n    \r\n\r\n    return ({/* <div>{persons.length? \r\n        <ul >{persons.map((person)=>\r\n          <li  key={person.id}>{person.name}:{person.number}\r\n          <button \r\n              type=\"button\"\r\n              onClick={() => onDeleteContacts(person.id)}>Удалить\r\n          </button>\r\n          </li>)}\r\n        FFFFFFFFFFF</ul> : <p>No entries in the phone book</p>}\r\n      </div> */})\r\n} \r\n       \r\n  \r\nconst mapStateToProps = state => ({\r\n    isLoading: state.contacts.items.isLoading,\r\n    persons:state.contacts.items.entities\r\n  });\r\n  const mapDispatchToProps=dispatch=>{\r\n    return{\r\n      \r\n      onDeleteContacts:(id)=>dispatch(actions.deleteContacts(id))\r\n    }\r\n    \r\n  }  \r\n  \r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Test)","import {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../redux/contacts/actions';\r\n\r\n\r\n\r\nfunction Form({onSubmit}){\r\n  const [name,setName]=useState('');\r\n  const [number,setNumber]=useState('');\r\n\r\n  const nameInputId=uuidv4();\r\n  const numberInputId=uuidv4();\r\n\r\n  const handelChangeName=(event)=>{\r\n    const {value}=event.currentTarget;  \r\n    setName(value);\r\n  \r\n  }\r\n\r\n  const handelChangeNumber=(e)=>{\r\n    console.log(e);\r\n    const {value}=e.currentTarget;  \r\n    setNumber(value);\r\n\r\n  }\r\n\r\n    const handelSubmit=e=>{\r\n    e.preventDefault();\r\n    onSubmit({name,number});\r\n    reset()\r\n  }\r\n\r\n  const reset=()=>{\r\n      setName('');\r\n      setNumber('');\r\n  }\r\n \r\n  \r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handelSubmit}>\r\n        <label htmlFor={nameInputId}> Name </label>\r\n        <input className={s.input}\r\n              id={nameInputId}\r\n              onChange={handelChangeName}\r\n              value={name}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n        />\r\n       <label htmlFor={numberInputId}> Number </label>\r\n       <input className={s.input}\r\n              id={numberInputId}\r\n              onChange={handelChangeNumber}\r\n              value={number}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n       />\r\n       <button className={s.button}type=\"submit\">Add contact</button>\r\n    </form>\r\n\r\n</>\r\n);}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n  onSubmit:data=>dispatch(actions.addContacts(data))\r\n})\r\n\r\n  export default connect(null,mapDispatchToProps)(Form);","\r\nimport s from './PersoneEditor.module.css';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport actions from '../../redux/contacts/actions';\r\nimport { useEffect } from 'react';\r\nimport {fetchContacts} from '../../redux/contacts/contacts-operations'\r\n\r\n\r\n\r\nfunction PersonEditor({onDeleteContacts}){\r\n  const dispatch=useDispatch();\r\n  const persons=useSelector(state=>state.contacts.items.entities)\r\n  \r\n  useEffect(()=>{\r\n    dispatch(fetchContacts())\r\n  },[dispatch]) \r\n\r\n   \r\n    return  (  <>\r\n      \r\n      <div>{persons.length? \r\n              <ul className={s.stats}>{persons.map((person)=>\r\n                <li className={s.item} key={person.id}>{person.name}:{person.number}\r\n                <button className={s.button}\r\n                    type=\"button\"\r\n                    onClick={() => onDeleteContacts(person.id)}>Удалить\r\n                </button>\r\n                </li>)}\r\n              </ul> : <p>No entries in the phone book</p>}\r\n            </div>  \r\n   </> )\r\n}\r\nconst getVisibleContacts=(entities,filter)=>{\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return entities.filter(entitie=>entitie.name.toLowerCase().includes(normalizedFilter))\r\n}\r\n\r\n\r\n const mapStateToProps=({contacts:{items:{entities},filter}})=>({\r\n\r\n persons:getVisibleContacts(entities,filter),\r\n})\r\n\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    onDeleteContacts:(id)=>dispatch(actions.deleteContacts(id))\r\n    \r\n  }\r\n  \r\n}\r\n      \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PersonEditor);\r\n","import React from 'react';\r\nimport s from './Filter.module.css'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../redux/contacts/actions'\r\n\r\n\r\n\r\nconst Filter =({value,onChange})=>(\r\n  <label className={s.label}><b>Фильтр по имени</b><input className={\r\n    s.input\r\n  } type=\"Text\" value={value} onChange={onChange}/></label>\r\n\r\n);\r\nconst mapStateToProps=state=>({\r\n  value:state.contacts.filter\r\n}) \r\nconst mapDispatchToProps=dispatch=>({\r\n  onChange:e=>dispatch(actions.changeFilterContacts(e.target.value))\r\n})       \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","\r\n//import React,{useState,useEffect} from 'react';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport Test from './components/Test/Test'\r\n\r\nimport Form from \"./components/Form/Form\"\r\nimport PersonEditor from './components/PersonEditor/PersonEditor';\r\nimport Filter from './components/Filter/Filter';\r\nimport {connect} from 'react-redux'\r\nimport actions from './redux/contacts/actions';\r\nimport { Switch, Route} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nfunction App(){\r\n  \r\n  return(\r\n    <><Switch>\r\n      <Route path=\"/goit-react-hw-07-phonebook\">\r\n      <h1>Phonebook</h1>\r\n      <Form/> \r\n      <Filter/>\r\n      <h2>Contacts</h2>\r\n      <PersonEditor /> \r\n      </Route>\r\n      <Route path=\"/goit-react-hw-07-phonebook/contacts\">\r\n        <Test />\r\n      </Route>\r\n    </Switch> \r\n    </>\r\n    \r\n)\r\n}\r\nconst mapStateToProps=state=>{\r\n  return {\r\n    items:state.contacts.items,\r\n    filter:state.contacts.filter\r\n  }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n  return{\r\n    formSubmitHandler:value=> dispatch(actions.addContacts(value)),\r\n    getVisibleContacts:value=>dispatch(actions.filterContacts(value)),\r\n    deleteContacts:id=>dispatch(actions.deleteContacts(id)),\r\n    \r\n    \r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport a from './actions';\r\n//import {fetchContacts} from './contacts-operations'\r\n\r\nconst entities=createReducer([], \r\n  {\r\n    [a.fetchContactsSuccess]:(_,{payload})=>payload,\r\n    [a.addContacts]:(state,{payload})=>{\r\n      const user = state.find(user => user.name === payload.name); \r\n    if (user){return alert(`${payload.name} is already on contacts`)}return [...state,payload]},\r\n    [a.deleteContacts]:(state,{payload})=>state.filter(({ id }) => id !== payload)\r\n\r\n  })\r\nconst isLoading=createReducer(false,{\r\n  [a.fetchContactsRequest]: () => true,\r\n  [a.fetchContactsSuccess]: () => false,\r\n  [a.fetchContactsError]: () => false,\r\n\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n  [a.fetchContactsRequest]: () => null,\r\n  [a.fetchContactsError]: () => null,\r\n});\r\n\r\nconst filterReducer=createReducer('', {\r\n  [a.changeFilterContacts]:(_,{payload})=>payload,\r\n})\r\n/* const filterReducer= (state = '', { type, payload }) => {\r\n    switch (type) {\r\n      case types.CHANGE_FILTER:\r\n        return payload;\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }; */\r\n\r\nexport default combineReducers({\r\n    items:combineReducers({\r\n      entities,\r\n      isLoading,\r\n      error\r\n    }),\r\n    filter:filterReducer,\r\n});","import { configureStore} from '@reduxjs/toolkit'\r\nimport contactsReducer from './contacts/contactsReduser';\r\n\r\n\r\n\r\n\r\n/* const rootReducer=combineReducers({\r\n    contacts:contactsReducer\r\n}) */  \r\nconst store=configureStore({\r\n    reducer:{\r\n        contacts:contactsReducer,\r\n    }\r\n})\r\n//const store=createStore(rootReducer,composeWithDevTools());\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nconsole.log(store);\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}